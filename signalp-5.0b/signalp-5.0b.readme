SignalP 5.0b

The SignalP 5.0 tool predicts the presence of signal peptides and the location of their cleavage sites in proteins from Archaea, Gram-positive Bacteria, Gram-negative Bacteria and Eukarya. In Bacteria and Archaea, SignalP 5.0 can discriminate between three types of signal peptides Sec/SPI (standard signal peptide), Sec/SPII (lipoprotein signal peptide) and Tat/SPI (tat signal peptide). SignalP 5.0 is based on a deep convolutional and recurrent neural network architecture including a conditional random field.

More information about the method can be found at:

        http://www.cbs.dtu.dk/services/SignalP/

SignalP 5.0  will run under OS X (Macintosh) and Linux.

The SignalP 5.0 package consists of two files:
        signalp-5.0.readme              this file
        signalp-5.0b.<unix>.tar.gz       compressed TAR archive

where 'unix' is the UNIX platform on which you are about to install. It has to
be Darwin or Linux, such as 'signalp-5.0b.Linux.tar.gz'.

- Installation instructions

1. Decide where in your file system you wish to keep the software.  Uncompress
   and untar the package in that location:

        tar -xvzf signalp-5.0b.tar.gz

   This will produce a directory  'signalp-5.0b'.  The size of the uncompressed
   package will not exceed 125 Mb.

2. The package folder contains two folders 'bin' and 'lib'. The executable of signalp-5.0  
   is inside 'bin'. It can be run directly from that folder but it can also be installed 
   globally. To do that, move or copy the executable 'signalp' to your system bin
   folder ('/usr/local/bin') or user bin folder and move or copy the content of 'lib' to
   your system lib folder ('/usr/local/lib') or user lib folder. It is important to 
   keep this structure so the executable can find the libraries:
	*/bin/signalp
	*/lib/


3. Test SignalP on the 10 eukaryotic sequences shipped with the package: go to
   the signalp-5.0b directory on your system and issue the following commands:

        > bin/signalp -fasta test/euk10.fsa -org euk -format short -prefix euk_10_short
        > bin/signalp -fasta test/euk10.fsa -org euk -format long -prefix euk_10_long

   The output files should be identical to the corresponding files in
   'signalp-5.0b/test'.

4. Move or copy the 'signalp.1' file to a appropriate location  in your manual
   system. If you need a compiled version try running:

        man -d signalp.1 | compress >signalp.Z

        or:

        neqn signalp.1 | tbl | nroff -man | col | compress >signalp.Z

5. Enjoy!

- Execution instructions

1. Input proteins
The input proteins must be provided in FASTA format.
All the input sequences must be in one-letter amino acid code. The allowed alphabet (not case sensitive) is as follows:
	A C D E F G H I K L M N P Q R S T V W Y and X (unknown)
All the alphabetic symbols not in the allowed alphabet will be converted to X before processing. All the non-alphabetic symbols, including white space and digits, will be ignored.

2. Input options

  -batch int
    	Number of sequences that the tool will run simultaneously. Decrease or increase size depending on your system memory. (default 10000). Note: this option will have an effect also on the computation speed. A larger batch size will mean faster computation at the expense of using more memory. The default batch size of 10000 will use approximately 1.5 GB of memory.
  -fasta string
    	Input file in fasta format.
  -format string
    	Output format. 'long' for generating the predictions with plots, 'short' for the predictions without plots. (default "short")
  -gff
    	Make gff3 file of processed sequences.
  -mature
    	Make fasta file with mature sequence.
  -org string
    	Organism. Archaea: 'arch', Gram-positive: 'gram+', Gram-negative: 'gram-' or Eukarya: 'euk' (default "euk")
  -plot string
    	Plots output format. When long output selected, choose between 'png', 'eps' or 'none' to get just a tabular file. (default "png")
  -prefix string
    	Output files prefix. (default "Input file prefix")
  -stdout
    Write the prediction summary to the STDOUT.
  -tmp string
    	Specify temporary file directory. (default "System default tmpdir")
  -verbose
      Verbose output. Specify '-verbose=false' to avoid printing. (default true)
  -version
	    Prints version

3. Output format

The user can obtain the results of the run in various formats:
	- A prediction summary (tabular file containing 1. the protein prediction (SP(Sec/SPI) / LIPO(Sec/SPII) / TAT(Tat/SPI)) / OTHER and the associated likelihood probability and 2. the cleavage site position and associated likelihood probability. NOTE: if the cleavage site position is "?", it means that the cleavage site is out range due to a probable protein fragment as input.)
	- Processed entries fasta (a FASTA sequence file containing the sequences of protein that had predicted signal peptides, with the signal peptide removed)
	- Processed entries gff3 (a file showing the signal peptides feature of those proteins that had predicted signal peptides in GFF3 format).
	- A plot, three likelihood probabilities are reported on the plot, i.e. SP(Sec/SPI) / LIPO(Sec/SPII) / TAT(Tat/SPI) (depending on what type of signal peptide is predicted), CS (the cleavage site) and OTHER (the probability that the sequence does not have any kind of signal peptide).
	- A tabular file with the numeric likelihood probabilities used in the plot.

- Fixes/Modifications
  Version 5.0b:
    - Fixed error when the full path to the 'signalp' binary was not specified.
    - Conflicting characters in the protein name, such as '|', are now only replaced in the filename.
    - Added option to write summary prediction to the STDOUT.
    - Added verbose option.

- Problems and questions

In case of technical problems (bugs etc.) please contact jjalma@dtu.dk.

Questions on the scientific aspects of the SignalP method  should go to Henrik
Nielsen, henni@dtu.dk.
